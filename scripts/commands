FROM_IMAGE() {
    local FROM_IMAGE=$1
    local FROM_IMAGE_DIR="${WORK_DIR}/${FROM_IMAGE}"

    echo "FROM_IMAGE $@"

    if [ ! -f "${FROM_IMAGE_DIR}/Imagefile.cache" ]; then
        echo "Building ${FROM_IMAGE}"
        pushd ${BASE_DIR} >/dev/null
        export IMAGESH_SUB=1
        ./image.sh ${FROM_IMAGE}
        popd >/dev/null
    fi

    mkdir -p "${ROOTFS_DIR}"
    rsync -auHAXx --exclude var/cache/apt/archives "${FROM_IMAGE_DIR}/rootfs/" "${ROOTFS_DIR}/"
    echo "FROM_IMAGE done."
}
export -f FROM_IMAGE

COPY() {
    CHOWN_ARG="--chown=root:root"
    if [[ "$1" =~ "--chown=.*" ]]; then
        CHOWN_ARG=$1
        shift
    fi
    local SOURCE=$1
    local DEST=$2
    echo "COPY $@"
    if [ -d "${SOURCE}" ]; then
        SOURCE="${SOURCE%/}/"
        TESTDIR="${ROOTFS_DIR}${DEST}"
    elif [ -f "${SOURCE}" ]; then
        TESTDIR="${ROOTFS_DIR}${DEST%/*}"
    else
        echo "ERROR: ${SOURCE} is neither a file nor a directory!" >&2
        exit 1
    fi
    mkdir -p "${TESTDIR}"

    rsync -aH "${CHOWN_ARG}" "${SOURCE}" "${ROOTFS_DIR}${DEST}"
    echo "COPY done."
}
export -f COPY

CONFIGURE() {
    local SOURCE=$1
    local DEST=$2
    echo "CONFIGURE $@"
    mkdir -p "${ROOTFS_DIR}${DEST%/*}"
    envsubst <"${SOURCE}" >"${ROOTFS_DIR}${DEST}"
    echo "CONFIGURE done."
}
export -f CONFIGURE

RUN_QUILT() {
    local file=$1
    echo "RUN_QUILT $@"
    if [ "${CLEAN}" = "1" ]; then
        rm -rf "${IMAGE_DIR}/.pc"
    fi
    export QUILT_PATCHES="${SOURCE_DIR}/${file}"
    pushd "${IMAGE_DIR}" > /dev/null
    quilt upgrade
    if [ -e "${SOURCE_DIR}/${file}/EDIT" ]; then
        echo "Dropping into bash to edit patches..."
        bash
    fi
    quilt push -a || [ $? -eq 2 ]
    popd > /dev/null
    echo "RUN_QUILT done."
}
export -f RUN_QUILT

ON_CHROOT() {
    echo "ON_CHROOT $@"
    systemd-nspawn                         \
        -E DEBIAN_FRONTEND=noninteractive  \
        -M $(tr / - <<<${NAME})            \
        -PD "${ROOTFS_DIR}" "$@"
    echo "ON_CHROOT done."
}
export -f ON_CHROOT
