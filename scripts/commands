#!/bin/bash

FROM_ROOTFS() {
    local FROM_ROOTFS=$1
    local FROM_ROOTFS_DIR="${WORK_DIR}/${FROM_ROOTFS}/rootfs"

    if [ ! -d "${FROM_ROOTFS_DIR}" ]; then
        pushd ${BASE_DIR} >/dev/null
        ./build.sh ${FROM_ROOTFS}
        popd >/dev/null
    fi

    mkdir -p "${ROOTFS_DIR}"
    rsync -auHAXx --exclude var/cache/apt/archives "${FROM_ROOTFS_DIR}/" "${ROOTFS_DIR}/"
}
export -f FROM_ROOTFS

install_file() {
    local FILENAME=$1
    install -m 644 "${FILENAME}" "${ROOTFS_DIR}/${FILENAME}"
}
export -f install_file

install_file_root() {
    local FILENAME=$1
    install -m 600 "${FILENAME}" "${ROOTFS_DIR}/${FILENAME}"
}
export -f install_file_root

install_program() {
    local FILENAME=$1
    install -m 755 "${FILENAME}" "${ROOTFS_DIR}/${FILENAME}"
}
export -f install_program

run_debconf() {
    ON_CHROOT << EOF
debconf-set-selections -v <<SELEOF
$(<"$1")
SELEOF
EOF
}
export -f run_debconf

install_packages() {
    local PACKAGES=$@
    ON_CHROOT << EOF
apt-get install -y $PACKAGES
EOF
}
export -f install_packages

quilt_patches() {
    local file=$1
    pushd "${STAGE_WORK_DIR}" > /dev/null
    if [ "${CLEAN}" = "1" ]; then
        rm -rf .pc
        rm -rf ./*-pc
    fi
    export QUILT_PATCHES="${STAGE_DIR}/${file}"
    STAGE_QUILT_PATCH_DIR="$(basename "$STAGE_DIR")-pc"
    mkdir -p "$STAGE_QUILT_PATCH_DIR"
    ln -snf "$STAGE_QUILT_PATCH_DIR" .pc
    quilt upgrade
    if [ -e "${STAGE_DIR}/${file}/EDIT" ]; then
        echo "Dropping into bash to edit patches..."
        bash
    fi
    RC=0
    quilt push -a || RC=$?
    case "$RC" in
        0|2)
            ;;
        *)
            false
            ;;
    esac
    popd > /dev/null
}
export -f quilt_patches

ON_CHROOT() {
    setarch linux32 systemd-nspawn                  \
        -E DEBIAN_FRONTEND=noninteractive           \
        -E LOCALE_DEFAULT="${LOCALE_DEFAULT}"       \
        -E KEYBOARD_KEYMAP="${KEYBOARD_KEYMAP}"     \
        -E KEYBOARD_LAYOUT="${KEYBOARD_LAYOUT}"     \
        -PD "${ROOTFS_DIR}" "$@"
}
export -f ON_CHROOT
