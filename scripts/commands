#!/bin/bash

FROM_ROOTFS() {
    local FROM_ROOTFS=$1
    local FROM_ROOTFS_DIR="${WORK_DIR}/${FROM_ROOTFS}/rootfs"

    if [ ! -d "${FROM_ROOTFS_DIR}" ]; then
        pushd ${BASE_DIR} >/dev/null
        ./build.sh ${FROM_ROOTFS}
        popd >/dev/null
    fi

    mkdir -p "${ROOTFS_DIR}"
    rsync -auHAXx --exclude var/cache/apt/archives "${FROM_ROOTFS_DIR}/" "${ROOTFS_DIR}/"
}
export -f FROM_ROOTFS

INSTALL() {
    CHOWN_ARG="--chown=root:root"
    if [[ "$1" =~ "--chown=.*" ]]; then
        CHOWN_ARG=$1
        shift
    fi
    local SOURCE=$1
    local DEST=$2
    if [ -d "${SOURCE}" ]; then
        SOURCE="${SOURCE%/}/"
        TESTDIR="${ROOTFS_DIR}${DEST}"
    elif [ -f "${SOURCE}" ]; then
        TESTDIR="${ROOTFS_DIR}${DEST%/*}"
    else
        echo "ERROR: ${SOURCE} is neither a file nor a directory!" >&2
        exit 1
    fi
    mkdir -p "${TESTDIR}"

    rsync -aH "${CHOWN_ARG}" "${SOURCE}" "${ROOTFS_DIR}${DEST}"
}
export -f INSTALL

quilt_patches() {
    local file=$1
    pushd "${STAGE_WORK_DIR}" > /dev/null
    if [ "${CLEAN}" = "1" ]; then
        rm -rf .pc
        rm -rf ./*-pc
    fi
    export QUILT_PATCHES="${STAGE_DIR}/${file}"
    STAGE_QUILT_PATCH_DIR="$(basename "$STAGE_DIR")-pc"
    mkdir -p "$STAGE_QUILT_PATCH_DIR"
    ln -snf "$STAGE_QUILT_PATCH_DIR" .pc
    quilt upgrade
    if [ -e "${STAGE_DIR}/${file}/EDIT" ]; then
        echo "Dropping into bash to edit patches..."
        bash
    fi
    RC=0
    quilt push -a || RC=$?
    case "$RC" in
        0|2)
            ;;
        *)
            false
            ;;
    esac
    popd > /dev/null
}
export -f quilt_patches

ON_CHROOT() {
    setarch linux32 systemd-nspawn                  \
        -E DEBIAN_FRONTEND=noninteractive           \
        -E LOCALE_DEFAULT="${LOCALE_DEFAULT}"       \
        -E KEYBOARD_KEYMAP="${KEYBOARD_KEYMAP}"     \
        -E KEYBOARD_LAYOUT="${KEYBOARD_LAYOUT}"     \
        -PD "${ROOTFS_DIR}" "$@"
}
export -f ON_CHROOT
